// Дано натуральное число N. Выведите все его цифры по одной, в обычном порядке, разделяя 
//их пробелами или новыми строками. При решении этой задачи нельзя использовать строки 
//(их можно только возвращать, если пишется функцией), списки, массивы (ну и циклы, разумеется). 
//Разрешена только рекурсия и целочисленная арифметика.

// int N=1667658;
// void PrintNumber(int num)
// {
//     if(num==0)  return;

//     Console.Write(num%10 + " ");
//     num=num/10;
//     PrintNumber(num);
// }

// PrintNumber(N); 

//Дано натуральное число N. Выведите все его цифры по одной, в обычном порядке, 
//разделяя их пробелами или новыми строками. При решении этой задачи нельзя использовать
 //строки (их можно только возвращать, если пишется функцией), списки, массивы (ну и циклы, разумеется).
  //Разрешена только рекурсия и целочисленная арифметика.

//   int n= 845776;
//   string m=String.Empty;  // здесь надо ввести пустую строку потому что этот метод должен вернуть какую то переменную
//   string PrintNumber(int n)
//   {
//       if(n==0) return m; // или можно убрать переменную м и просто двойные кавычки поставить обозначить пустую строку
           
//       return PrintNumber(n/10) + n%10 + " ";  //здесь пробел для выводы чисел через пробел 
//       // суть в том что сначала возвращаем вызов функции,  а затем соединяем в строку с другими действиями
//       // т е сначала мы получим число 84577, а затем  845776%10, получим 6, далее рекурсия дает 8457, 84577%10=7, далее 845, 8457%10=7,
//       //далее 84, 845%10=5, 8, 84%10=4, 0, 8%10=8, так как рекурсия вернула 0, выходим из рекурсии и возвращаем пустую строку
//   }

//   Console.Write(PrintNumber(n));

                      
                      
                      //Функция сабстринг
    // Позволяет вырезать подстроку из строки

     //string word="Hello world";
//я хочу вырезать из строки выше только слово world, это можно сделать через обращение к переменной строкового
// типа, из которой я хочу выделить подстроку, затем ставиться точка и вызывается функция сабстринг
//у нее есть 2 аргумента входных, первый - то с какой позиции я хочу вырезать подстрочку ( строка это массив символов)значит индекс 0, второй-длина вырезаемой подстроки,
// в слове хелоу 5 символов, значит длина =5. Только вызова этой функции недостаточно, она возвращает результат своей работы, значит
//рехультат надо сохранить в новую переменную с таким же типом данных. Далее надо вывести эту переменную в терминал
    // string subword=word.Substring(0,5);
    // Console.WriteLine("исходное слово " + word);
    // Console.WriteLine("вырезанное слово "+ subword);

//string word="Hello world";  //теперь вырежем другое слово
// string subword=word.Substring(6,5);
// Console.WriteLine("исходное слово " + word);
// Console.WriteLine("полученная подстрока "+ subword);
              // Теперь на примере инт т е целочисленный массив
//Array.Copy()// здесь другая функция, но аналогичная, это войд метод, т е ничего не возвращает, но принимает 5 аргументов
//первый аргумент это исходный массив (Array surceArray) из него перекопируется необходимое колличество элементов 
//в другой массив (Array destinationArray) это третий аргумент, второй аргумент это исходый индекс(int sourceIndex ), 
//с которого надо начать копирование из исходного массива, 4 аргумент это индекс на который начинаем копировать в другом массиве(int destinationIndex)
//5 аргумент это (int length) длина, сколько элементов мы копируем из исходного массива

//     int[] myArray={1,2,3,4,5,6}; //объявляем исходный массив
//     int[] secondArray=new int[3]; // объявляем массив, в который будем сохранять, то что взяли из первого массива, объявляем его длину
//     Array.Copy(myArray,0,secondArray,0,secondArray.Length); //здесь 5 аргументом лучше указывать длину меньшего массива чтобы не выйти за пределы

//     for (int i = 0; i <secondArray.Length; i++)//цикл чтобы вывести результат в терминал
// {
//     Console.Write(secondArray[i]+ " ");
// }

                        //Рекурсия задачи примеры
    // Написать функцию, формирующую строковую последовательность целых чисел от 1 до number.
    // string GetSequence(int number) //функция которая возвращает строку

// {
//   if(number==1) return " " + number;
//   return GetSequence(number-1) + " " + number;
// }
// int myNumber=3;
// Console.WriteLine("последовательность: "+ GetSequence(myNumber));

       
        // Даны два целых числа A и В. Выведите все числа от A до B включительно, 
        //в порядке возрастания, если A < B, или в порядке убывания в противном случае